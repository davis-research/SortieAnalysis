\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Adjusting Individual Parameters}
\author{Samantha L. Davis}

\maketitle

\section{Summary}
This paper is a first run through of running the model with optimized parameters. I did the adjustment for density graphs post-mortem, so I'll need to re-evaluate and do another run through to get the ideal parameters for both density and basal area as seen in best\_matches.R.

View the Rnw document to view the code; otherwise, I am only printing outputs to save some space and make this document more readable.

<<echo=FALSE>>=
## load library
library(SortieIO)
library(outliers)
library(disperseR)

parName <- "adjusted"
filelocs <- c("outfiles/orig")
filemeans <- paste(filelocs, "/means", sep="")
charname <- c("AdultAbsBA", "AdultAbsDen")

@


<<eval=TRUE, echo=FALSE>>==
## bbbpipo
store <- processTestPlot("BBBPIPO", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/BBBPIPO-AdultAbsBA.csv", sep=""),
                 numsubplots = 3, subplotid=1)

store <- processTestPlot("BBBPIPO", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/BBBPIPO-AdultAbsDen.csv", sep=""),
                 numsubplots = 3, subplotid=1)

## emridge
store <- processTestPlot("EMRIDGE", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/EMRIDGE-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("EMRIDGE", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/EMRIDGE-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)

## frpije
store <- processTestPlot("FRPIJE", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/FRPIJE-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("FRPIJE", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/FRPIJE-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)

## pgabma
store <- processTestPlot("PGABMA", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/PGABMA-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("PGABMA", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/PGABMA-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)

## poflabma
store <- processTestPlot("POFLABMA", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/POFLABMA-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("POFLABMA", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/POFLABMA-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)

## sftrabma
store <- processTestPlot("SFTRABMA", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/SFTRABMA-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("SFTRABMA", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/SFTRABMA-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)

## supila
store <- processTestPlot("SUPILA", filelocs[1], 0,
                  charactername=charname[1],
                 writefile=paste(filemeans[1], "/SUPILA-AdultAbsBA.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
store <- processTestPlot("SUPILA", filelocs[1], 0,
                  charactername=charname[2],
                 writefile=paste(filemeans[1], "/SUPILA-AdultAbsDen.csv", sep=""), 
                 numsubplots = 3, subplotid=1)
rm("store")
@


\newpage

\section{Basal Area}
<<fig=TRUE, echo=FALSE>>=

  store <- readCSVs(filemeans[1])
  eval(parse(text=store))

  ## Ok, let's look at absolute basal area
    PlotChars <- rbind(bbbpipoadultabsba, frpijeadultabsba, emridgeadultabsba,
                     pgabmaadultabsba, poflabmaadultabsba, sftrabmaadultabsba,
                     supilaadultabsba)
    #head(PlotChars)
   ## Means of simulated BA by step and species
   PlotMeans <- aggregate(PlotChars$simMean,
                              by=list(PlotChars$Step, PlotChars$Species),
                              FUN=mean, na.rm=T)
   #head(PlotMeans)
  ## Means of Expected/Actual BA by step and species
   PlotMeans$expmean <- aggregate(PlotChars$AdultAbsBA,
                                      by=list(PlotChars$Step, PlotChars$Species),
                                      FUN=mean, na.rm=T)[,3]
   ## Adjusting column names and writing file for later
   colnames(PlotMeans) <- c("Step", "Species", "SimAbsBA", "ExpAbsBA")
   write.csv(PlotMeans, file=paste(filelocs[1], "/091015-adultba.csv", sep=""), row.names=F)
   #str(PlotMeans)
   #head(PlotMeans)
   #unique(PlotMeans$SimAbsBA)
   ## make the plot
  plot(PlotMeans[,"SimAbsBA"],PlotMeans[,"ExpAbsBA"],
        col=as.factor(PlotChars$Species),
        xlab="Simulated Means", ylab="Expected Means",
        main="Group Adult Asbolute Basal Area")
   abline(0,1)
   legend("topleft",
          legend=as.factor(unique(PlotChars$Species)),
          fill=as.factor(unique(PlotChars$Species)))
   ## get the slope and r2 of the linear model line
   summary(lm(SimAbsBA ~ ExpAbsBA, data=PlotMeans))
@

Now, how are the individual species doing?

<<fig=TRUE, echo=F, out.height=10, fig.width=10, fig.height=10>>==
  uniquespp <- unique(PlotMeans$Species)
  par(mfrow=c(3,4))
   for(i in 1:length(uniquespp)){
     maxval <- ifelse(max(PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsBA"], na.rm=T) > max(PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsBA"], na.rm=T), 
                      PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsBA"], 
                      PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsBA"])
     plot(PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsBA"], 
          PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsBA"], 
          xlab="Simulated Means", ylab="Expected Means", xlim=c(0, maxval), 
          ylim=c(0, maxval), main=uniquespp[i], asp=1)
     abline(0,1)
   }
  
  getSlope <- function(y, x){
    myModel <- glm(y ~ x)
    return(unname(myModel$coefficients[2]))
  }
  
  sppSlopes <- data.frame(species=uniquespp, stringsAsFactors=F)
  
  for(i in 1:length(uniquespp)){
    sppSlopes[i, "ba90"] <- getSlope(PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsBA"], 
                                        PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsBA"])
  }
@
<<>>==
  sppSlopes
@




\newpage

\section{Adult Density}
<<fig=TRUE, echo=FALSE>>=

  store <- readCSVs(filemeans[1])
  eval(parse(text=store))

  ## Ok, let's look at absolute basal area
    PlotChars <- rbind(bbbpipoadultabsden, frpijeadultabsden, emridgeadultabsden,
                     pgabmaadultabsden, poflabmaadultabsden, sftrabmaadultabsden,
                     supilaadultabsden
                     )
    #head(PlotChars)
   ## Means of simulated BA by step and species
   PlotMeans <- aggregate(PlotChars$simMean,
                              by=list(PlotChars$Step, PlotChars$Species),
                              FUN=mean, na.rm=T)
   #head(PlotMeans)
  ## Means of Expected/Actual BA by step and species
   PlotMeans$expmean <- aggregate(PlotChars$AdultAbsDen,
                                      by=list(PlotChars$Step, PlotChars$Species),
                                      FUN=mean, na.rm=T)[,3]
   ## Adjusting column names and writing file for later
   colnames(PlotMeans) <- c("Step", "Species", "SimAbsDen", "ExpAbsDen")
   write.csv(PlotMeans, file=paste(filelocs[1], "/091015-adultden.csv", sep=""), row.names=F)
   #str(PlotMeans)
   #head(PlotMeans)
   #unique(PlotMeans$SimAbsBA)
   ## make the plot
  plot(PlotMeans[,"SimAbsDen"],PlotMeans[,"ExpAbsDen"],
        col=as.factor(PlotChars$Species),
        xlab="Simulated Means", ylab="Expected Means",
        main="Group Adult Asbolute Density")
   abline(0,1)
   legend("topleft",
          legend=as.factor(unique(PlotChars$Species)),
          fill=as.factor(unique(PlotChars$Species)))
   ## get the slope and r2 of the linear model line
   summary(lm(SimAbsDen ~ ExpAbsDen, data=PlotMeans))
@

Now, how are the individual species doing?

<<fig=TRUE, echo=F, out.height=10, fig.width=10, fig.height=10>>==
  uniquespp <- unique(PlotMeans$Species)
  par(mfrow=c(3,4))
   for(i in 1:length(uniquespp)){
     maxval <- ifelse(max(PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsDen"], na.rm=T) > max(PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsDen"], na.rm=T), 
                      PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsDen"], 
                      PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsDen"])
     if(!is.na(maxval)){
     plot(PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsDen"], 
          PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsDen"], 
          xlab="Simulated Means", ylab="Expected Means", xlim=c(0, maxval), 
          ylim=c(0, maxval), main=uniquespp[i], asp=1)
     abline(0,1)
     }
   }
  
  
  for(i in 1:length(uniquespp)){
    sppSlopes[i, "den90"] <- getSlope(PlotMeans[PlotMeans$Species==uniquespp[i], "ExpAbsDen"], 
                                        PlotMeans[PlotMeans$Species==uniquespp[i], "SimAbsDen"])
  }
@
<<>>==
  sppSlopes
    write.csv(sppSlopes, file=paste(parName, ".csv", sep=""))
@
\end{document}