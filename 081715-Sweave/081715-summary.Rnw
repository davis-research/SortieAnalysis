\documentclass{article}
\usepackage[hidelinks]{hyperref}
\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Calibrating Parameters of Sierra Nevada SORTIE-ND model with USGS and FIA Data}
\author{Samantha L. Davis}
\maketitle

\section{Introduction}

The seven plots that I chose to use for calibration were: BBBPIPO, EMRIDGE, FRPIJE, PGABMA, POFLABMA, SFTRABMA, and SUPILA. The four plots that I will use for testing are WTABMA, EMSLOPE, SUABCO, and CCRPIPO. This document details the results from the batch files labeled 081715-X.xml. The changes between this and 081315-X.xml are small: The tree maps that I generated now have values ranging between 09-1.1 of the original values; the "true" tree map is not present in the plots, just like in 081315. In addition, all of the 081715 runs were only generated 10 times, because there were 3 runs to do.

\section{Methods}

\subsection{Allometry Parameters}

Allometry parameter calculation is described in the MakeMyForests vignette, which can be \href{https://github.com/ecology-rocks/MakeMyForests/blob/master/inst/doc/MakeMyForestsManual.pdf}{accessed on GitHub}. Of note, the growth and mortality calculations from this manual are not used in this model run, but are described in more detail below.

\subsection{Dispersal Parameters}

Dispersal parameters were calculated using the disperseR package. More details can be found in the disperseR documentation. Dispersal parameters were calculated as a result of species across all seven plots, and not calibrated to individual plots.
\subsection{Growth Parameters}

For growth rate, I decided to use the NCI growth with auto height sub-model in SORTIE-ND. This sub-model requires a maximum growth rate, and then a series of modifiers ranging between 0-1 to represent the possible effects of crowding, disturbance, drought, etc. For the base model, I opted to use mean growth rate as calculated from the eight calibration plots, by species. This run did not use variation in growth rate, but instead used a static increase.

\subsection{Mortality Parameters}

Mortality rates were calculated by counting the total number of alive and dead trees for \textit{each year}, and summing those across species for each of the eight calibration plots. Those resulting number of dead and alive per species were combined to estimate mean mortality rate as $\frac{n\:dead}{n\:dead\;+\;n\:alive}$.

\subsection{Expected Plot Results}

Individual "expected" outcomes were calculated from existing plot records. Relevant plot values like "Adult Basal Area Per Hectare" and "Adult Density Per Hectare" were calculated for each timestep in the real plot records. These were saved in a CSV file entitled \texttt{expectedPlotOutcomes.csv}, and can also be found in the \texttt{SortieOutputs} package in the data.frame \texttt{realPlots}.

\subsection{Simulations}

I generated eight parameter files, one for each calibration plot. Within each, there was a 300m x 300m tree map added. These tree maps had x and y generated by \texttt{runif()} in R, and the DBHs were generated by sampling the real data and applying a randomized multiplier between \textbf{0.9-1.1}. Heights were calculated automatically by SORTIE-ND when the program initiated.

I ran each parameter file \textbf{ten} times in a batch file, and saved summary outputs that calculated Density and Basal Area per hectare for each time step for Adults, Saplings, and Seedlings.

\section{Results}


I'll present all of the individual plots for Basal Area and Density first, then present the plots that were generated by averaging the data from each of the eight plots across species for both expected and simulated data, and plotting them against each other.

For the first set of figures, by plot, the hashmarks represent a single trial at a single time point, and may be grouped together rather closely. The closed squares of the same color indicate the true means of the real plots. The x-axis is time, and the y-axis is the variable of interest.

\subsection{BBBPIPO: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("BBBPIPO", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/BBBPIPO-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("BBBPIPO", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/BBBPIPO-AdultAbsDen.csv")
@


\subsection{EMRIDGE: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("EMRIDGE", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/EMRIDGE-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("EMRIDGE", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/EMRIDGE-AdultAbsDen.csv")
@

\subsection{FRPIJE: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("FRPIJE", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/FRPIJE-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("FRPIJE", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/FRPIJE-AdultAbsDen.csv")
@

\subsection{PGABMA: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("PGABMA", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/PGABMA-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("PGABMA", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/PGABMA-AdultAbsDen.csv")
@


\subsection{POFLABMA: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("POFLABMA", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/POFLABMA-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("POFLABMA", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/POFLABMA-AdultAbsDen.csv")
@

\subsection{SFTRABMA: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("SFTRABMA", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/SFTRABMA-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("SFTRABMA", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/SFTRABMA-AdultAbsDen.csv")
@

\subsection{SUPILA: Adult Basal Area and Density}
<<fig=TRUE>>=
library(SortieOutputs)
 processTestPlot("SUPILA", "outfiles/orig", 0,
                  charactername="AdultAbsBA",
                 writefile="outfiles/orig/means/SUPILA-AdultAbsBA.csv")
@

<<fig=TRUE>>=
  processTestPlot("SUPILA", "outfiles/orig", 0,
                  charactername="AdultAbsDen",
                  writefile="outfiles/orig/means/SUPILA-AdultAbsDen.csv")
@

\subsection{Averages For All Plots}

For time saving and an issue with loading a bunch of files needlessy, I wrote the means, by species, across eight plots, into a separate file for each of the two characters (Basal Area and Density). I will read those files in and plot the simulated against the expected/real plot data. If there is a slope of 1, we can assume that our model did a decent job at predicting that variable.



<<fig=TRUE>>=
library(disperseR)
  store <- readCSVs("outfiles/orig/means")
  eval(parse(text=store))

  ## Ok, let's look at absolute basal area
  AllAbsBA <- rbind(bbbpipoadultabsba, frpijeadultabsba,
                    emridgeadultabsba, pgabmaadultabsba,
                    poflabmaadultabsba, sftrabmaadultabsba,
                    supilaadultabsba)
  ## Means of simulated BA by step and species
  AllAbsBAmeans <- aggregate(AllAbsBA$simMean,
                             by=list(AllAbsBA$Step, AllAbsBA$Species),
                             FUN=mean, na.rm=T)
  ## Means of Expected/Actual BA by step and species
  AllAbsBAmeans$expmean <- aggregate(AllAbsBA$AdultAbsBA,
                                     by=list(AllAbsBA$Step, AllAbsBA$Species),
                                     FUN=mean, na.rm=T)[,3]
  ## Adjusting column names and writing file for later
  colnames(AllAbsBAmeans) <- c("Step", "Species", "SimAbsBA", "ExpAbsBA")
  write.csv(AllAbsBAmeans, file="outfiles/orig/081715-adultba.csv", row.names=F)
  ## make the plot
 plot(AllAbsBAmeans[,"SimAbsBA"],AllAbsBAmeans[,"ExpAbsBA"],
       col=as.factor(AllAbsBA$Species),
       xlab="Simulated Means", ylab="Expected Means",
       main="Group Adult Asbolute Basal Area")
  abline(0,1)
  legend("topleft",
         legend=as.factor(unique(AllAbsBA$Species)),
         fill=as.factor(unique(AllAbsBA$Species)))
  ## get the slope and r2 of the linear model line
  summary(lm(SimAbsBA ~ ExpAbsBA, data=AllAbsBAmeans))
@

<<fig=TRUE>>=

  ## And absolute density
  AllAbsDens <- rbind(bbbpipoadultabsden, frpijeadultabsden,
                      emridgeadultabsden, pgabmaadultabsden,
                      poflabmaadultabsden, sftrabmaadultabsden,
                      supilaadultabsden)
  AllAbsDenmeans <- aggregate(AllAbsDens$simMean,
                              by=list(AllAbsDens$Step, AllAbsDens$Species),
                              FUN=mean, na.rm=T)
  AllAbsDenmeans$expmean <- aggregate(AllAbsDens$AdultAbsDen,
                                      by=list(AllAbsDens$Step, AllAbsDens$Species),
                                      FUN=mean, na.rm=T)[,3]
  colnames(AllAbsDenmeans) <- c("Step", "Species", "SimAbsDen", "ExpAbsDen")
  write.csv(AllAbsDenmeans, file="outfiles/orig/081715-adultdensity.csv", row.names=F)

  AllAbsDen <- AllAbsDenmeans

   plot(AllAbsDen[,"SimAbsDen"], AllAbsDen[,"ExpAbsDen"],
        col=as.factor(AllAbsDen$Species),
        xlab="Simulated Absolute Density", ylab="Expected Means",
        main="Group Adult Absolute Density")
  abline(0,1)
  legend("topleft", legend=unique(as.factor(AllAbsDen$Species)),
         fill=unique(as.factor(AllAbsDen$Species)))
  summary(lm(SimAbsDen ~ ExpAbsDen, data=AllAbsDen))

@



\section{Next Steps}

So it looks like basal area per hectare is straight on, but we're severely underestimating the number of trees in all plots. But the program seems to be right on with basal area, which means that the trees generated by my tree maps are bigger, with fewer total trees being generated than would be expected by the maps.

I think first, I'm going to double check that the number of rows entered into the tree maps, and the number of trees actually counted by SORTIE, are the same. If they are, e.g., they are all being registered and tracked in SORTIE, then I think I'll leave this question for later and move onto evaluating other parameters, like seedling, sapling, and mortality parameters.

I need to revisit the data and calculate seedling and sapling expected parameters, which means figuring out which trees get classified where based on the height equations. Then I can add those values to expectedPlotOutcomes, realPlots, and take a look at how far away we are.

\end{document}
